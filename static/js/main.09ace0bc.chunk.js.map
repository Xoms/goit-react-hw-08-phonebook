{"version":3,"sources":["redux/phonebook/contacts/recordReducer.js","redux/phonebook/filter/filterReducer.js","redux/phonebook/phonebookReducer.js","redux/auth/authReducer.js","redux/store.js","routes.js","components/hoc/withAuth.jsx","components/PublicRoute/PublicRoute.jsx","components/PrivateRoute/PrivateRoute.jsx","components/Nav/index.js","components/Nav/Nav.jsx","components/AuthModule/UserMenu/UserMenu.jsx","components/AuthModule/UserMenu/index.js","components/shared/Layout/index.js","components/shared/Layout/Layout.jsx","components/shared/Loader/Loader.styles.js","components/shared/Loader/index.js","components/shared/Loader/Loader.jsx","App.jsx","reportWebVitals.js","index.js","services/phonebook.service.js","redux/auth/authSelectors.js","redux/auth/authOperations.js","components/shared/Container/Container.styles.js","components/shared/Container/Container.jsx","components/shared/Container/index.js","redux/phonebook/contacts/recordOperations.js","redux/auth/authActions.js","redux/phonebook/filter/actionTypes.js","redux/phonebook/filter/filterActions.js","redux/phonebook/contacts/recordActions.js"],"names":["loadingReducer","createReducer","recordActions","getContactsRequest","getContactsSuccess","getContactsError","addContactRequest","addContactSuccess","addContactError","delContactRequest","delContactSuccess","delContactError","contactsRedusers","recordReducer","state","action","payload","filter","id","filterReducer","filterActions","filterChange","combineReducers","items","contactsReducers","isLoading","initialState","name","email","user","authActions","registerSuccess","loginSuccess","getCurrentUserSuccess","logoutSuccess","token","error","registerError","loginError","getCurrentUserError","logoutError","authReducer","defaultMiddlewae","getDefaultMiddleware","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","contacts","contactsReducer","auth","persistReducer","middleware","persistor","persistStore","routes","label","path","exact","component","lazy","privated","restricted","withAuth","Wrapped","withRouter","connect","isAuthorized","authSelectors","getToken","props","Componet","route","render","to","Component","rest","Nav","HomePage","className","activeClassName","AuthNav","dispatchToProps","onLogout","authOperations","logout","CurrentUser","getUserName","type","onClick","Layout","children","Container","LoaderContainer","styled","div","Loader","App","this","getCurrentUser","routesMap","map","fallback","mapDispatchToProps","onGetContacts","recordOperations","getContacts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","loading","document","getElementById","axios","defaults","baseURL","PhonebookService","newUser","post","userCredentials","get","headers","common","Authorization","newContact","delete","patch","selectors","getError","ops","register","credentials","dispatch","registerRequest","api","data","setToken","catch","err","login","loginRequest","logoutRequest","unsetToken","getState","getCurrentUserRequest","StyledContainer","contactsOperations","addContact","recordAtions","delContact","actions","createAction","types","FILTER_CHANGE"],"mappings":"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","file":"static/js/main.09ace0bc.chunk.js","sourcesContent":["import { createReducer } from '@reduxjs/toolkit';\r\nimport recordActions from './recordActions';\r\n\r\n// const initialState = JSON.parse(localStorage.getItem('contacts')) || [\r\n//     {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\r\n//     {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\r\n//     {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\r\n//     {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'}\r\n//   ];\r\n\r\nconst getContacts = (state, action) => {\r\n    return action.payload;\r\n}\r\n\r\nconst onAddContact = (state, action) => {\r\n    return [...state, action.payload]\r\n}\r\n\r\n\r\nconst  onDelContact = (state, action) =>{\r\n    return state.filter( ({id}) => id !== action.payload )\r\n};\r\n\r\n//для спиннера\r\nconst loadingReducer = createReducer (false , {\r\n    [recordActions.getContactsRequest]: () => true,\r\n    [recordActions.getContactsSuccess]: () => false,\r\n    [recordActions.getContactsError]: () => false,\r\n\r\n    [recordActions.addContactRequest]: () => true,\r\n    [recordActions.addContactSuccess]: () => false,\r\n    [recordActions.addContactError]: () => false,\r\n\r\n    [recordActions.delContactRequest]: () => true,\r\n    [recordActions.delContactSuccess]: () => false,\r\n    [recordActions.delContactError]: () => false,\r\n})\r\n\r\nconst recordReducer = createReducer([], {\r\n    \r\n    [recordActions.getContactsSuccess]: getContacts,\r\n    [recordActions.addContactSuccess]: onAddContact,\r\n    [recordActions.delContactSuccess]: onDelContact,\r\n})  \r\n\r\n\r\n const contactsRedusers = {recordReducer, loadingReducer}\r\n\r\nexport default contactsRedusers;","// import types from './actionTypes';\r\n\r\n// const filterReducer = (state = '', {type, payload} ) => {\r\n//     switch(type) {\r\n//         case types.FILTER_CHANGE:\r\n//             return payload.value;\r\n\r\n//         default: \r\n//             return state;        \r\n//     }\r\n// }\r\n\r\n// export default filterReducer; \r\n\r\n//с тулзами\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport filterActions from './filterActions';\r\n\r\nconst filterReducer = createReducer('', {\r\n    [filterActions.filterChange]: (state, action) => action.payload,\r\n})\r\n\r\nexport default filterReducer; ","import { combineReducers } from 'redux';\r\nimport contactsReducers from './contacts/recordReducer';\r\nimport filterReducer from './filter/filterReducer';\r\n\r\nexport default combineReducers({\r\n        items: contactsReducers.recordReducer,\r\n        filter: filterReducer,\r\n        isLoading: contactsReducers.loadingReducer\r\n    })","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport authActions from './authActions';\r\n\r\nconst initialState = { name: null, email: null};\r\n\r\n//user reducer\r\nconst user = createReducer(initialState, {\r\n    [authActions.registerSuccess]: (state, { payload }) => payload.user,\r\n    [authActions.loginSuccess]: (state, { payload }) => payload.user,\r\n    [authActions.getCurrentUserSuccess]: (state, { payload }) => payload,\r\n    [authActions.logoutSuccess]: () => initialState\r\n})\r\n\r\nconst token = createReducer(null, {\r\n    [authActions.registerSuccess]: (state, {payload}) => payload.token,\r\n    [authActions.loginSuccess]: (state, { payload }) => payload.token,\r\n    [authActions.logoutSuccess]: () => null\r\n})\r\n\r\nconst error = createReducer(null, {\r\n    [authActions.registerError]: (state, {payload}) => payload.error,\r\n    [authActions.loginError]: (state, {payload}) => payload.error,\r\n    [authActions.getCurrentUserError]: (state, {payload}) => payload.error,\r\n    [authActions.logoutError]: (state, {payload}) => payload.error\r\n} );\r\n\r\nconst authReducer = combineReducers({\r\n    user,\r\n    token,\r\n    error\r\n})\r\n\r\nexport default authReducer","\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from './phonebook/phonebookReducer';\r\nimport authReducer from './auth/authReducer';\r\n\r\nconst defaultMiddlewae = getDefaultMiddleware();\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token']\r\n}\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n    auth: persistReducer(authPersistConfig, authReducer)\r\n  },\r\n  middleware: [...defaultMiddlewae, ],\r\n})\r\n\r\nexport const persistor = persistStore(store);","import { lazy } from \"react\";\r\n\r\nconst routes = [\r\n    {   label: \"Home\",\r\n        path: \"/\",\r\n        exact: true,\r\n        component: lazy(() => import(\"./pages/Home\")),\r\n        privated: false,\r\n        restricted: false\r\n    },\r\n    {   \r\n        label: \"Register\",\r\n        path: \"/register\",\r\n        exact: true,\r\n        component: lazy(() => import(\"./pages/RegistrationPage\")),\r\n        privated: false,\r\n        restricted: true\r\n    },\r\n    {   \r\n        label: \"Login\",\r\n        path: \"/login\",\r\n        exact: true,\r\n        component: lazy(() => import(\"./pages/LoginPage\")),\r\n        privated: false,\r\n        restricted: true\r\n    },\r\n    {   \r\n        label: \"Contacts\",\r\n        path: \"/contacts\",\r\n        exact: true,\r\n        component: lazy(() => import(\"./pages/Contacts\")),\r\n        privated: true,\r\n        restricted: false\r\n    },\r\n]\r\n\r\nexport default routes;","import React from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport { authSelectors } from '../../redux/auth';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nconst withAuth = (Wrapped) => {\r\n    function WithAuth(props) {\r\n        return <Wrapped {...props}/>\r\n    }\r\n\r\n    const mapState = state => ({\r\n        isAuthorized: authSelectors.getToken(state)\r\n      })\r\n    \r\n    return withRouter(connect(mapState)(WithAuth))\r\n}\r\n\r\nexport default withAuth","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport withAuth from '../hoc/withAuth';\n\nconst PublicRoute = ({component: Componet,  isAuthorized, ...route}) => (\n  <Route {...route} render={(props =>  isAuthorized && route.restricted ? <Redirect to='/contacts' /> : <Componet {...props}/>  )} />\n);\n\nexport default withAuth(PublicRoute);\n","import React from 'react';\n\nimport { Redirect, Route } from 'react-router-dom';\nimport withAuth from '../hoc/withAuth'\n\n\nconst PrivateRoute = ({component: Component,  isAuthorized, ...rest}) => (\n  <Route {...rest} render={(props =>  isAuthorized ? <Component {...props}/> : <Redirect to='/login' />  )} />\n);\n\n\n\nexport default withAuth(PrivateRoute);\n","import Nav from './Nav';\n\nexport default Nav;\n","import React from 'react'\n\nimport withAuth from '../hoc/withAuth';\n\nimport {NavLink} from 'react-router-dom';\n\nimport  './Nav.styles.scss';\n\nconst Nav = ({isAuthorized}) => {\n  \n  const HomePage = <li className=\"navbar-item\"> \n      <NavLink to='/' exact className=\"nav-link\" activeClassName=\"nav-link--active\"> Home </NavLink>\n    </li>\n\n  const AuthNav = isAuthorized ? \n    <li className=\"navbar-item\"> \n      <NavLink to='/contacts' exact className=\"nav-link\" activeClassName=\"nav-link--active\"> Contacts </NavLink> \n    </li> \n    :\n    <>\n      <li className=\"navbar-item\"> \n        <NavLink to='/register' exact className=\"nav-link\" activeClassName=\"nav-link--active\"> Register </NavLink> \n      </li> \n      <li className=\"navbar-item\"> \n        <NavLink to='/login' exact className=\"nav-link\" activeClassName=\"nav-link--active\"> Login </NavLink> \n      </li> \n    </>\n\n  return(\n    \n  <ul className=\"navbar\">\n    {HomePage}\n    {AuthNav}\n  </ul>\n)};\n\n\nexport default withAuth(Nav);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport {authSelectors, authOperations} from '../../../redux/auth';\n//import { Test } from './UserMenu.styles';\n\nconst CurrentUser = ({name, onLogout}) => (\n  <> \n  { name &&\n  <div className=\"current-user\">\n    <span className=\"current-user__txt\">Welcome, {name}</span>\n    <button type=\"button\" className=\"current-user__btn-logout\" onClick={() => onLogout()}>Logout</button>\n  </div>\n  }\n  </>\n);\n\nCurrentUser.propTypes = {\n  name: PropTypes.string,\n};\n\n\nconst mapState = state => ({\n  name: authSelectors.getUserName(state)\n}) \n\n\nconst dispatchToProps =  {\n  onLogout: authOperations.logout\n}\nexport default connect(mapState, dispatchToProps)(CurrentUser);\n","import CurrentUser from './UserMenu';\n\nexport default CurrentUser;\n","import Layout from './Layout';\n\nexport default Layout;\n","import React from 'react';\nimport Nav from \"../../Nav\";\nimport UserMenu from \"../../AuthModule/UserMenu\";\nimport Container from \"../Container\";\nimport './Layout.styles.scss';\n\nconst Layout = ({children}) => (\n  <> \n    <header>\n      <Container>\n        <div className=\"header-container\">\n          <Nav />\n          <UserMenu />\n        </div>\n      </Container>\n    </header>\n\n    <main>\n      {children}\n    </main>\n\n    <footer className=\"footer\">\n      <Container>\n        <div className=\"footer-content\">\n          <p>Phonebook by Oleg Shablii</p>\n        </div>   \n      </Container>\n    </footer>\n  </>\n);\n\nexport default Layout;\n","import styled from 'styled-components';\n\nexport const LoaderContainer = styled.div`\n    display: flex;\n    justify-content: center;\n`;\n","import Loader from './Loader';\n\nexport default Loader;\n","import React from 'react';\nimport { LoaderContainer } from './Loader.styles';\nimport './Loader.scss'\n\nconst Loader = (props) => (\n  <LoaderContainer>\n    <div className=\"lds-ripple\"><div></div><div></div></div>\n  </LoaderContainer>\n  \n);\n\n\nexport default Loader;\n","import React, { Component, Suspense, lazy}  from 'react';\r\nimport { Route, Switch, /*Redirect*/ } from 'react-router-dom';\r\nimport routes from './routes';\r\nimport PublicRoute from './components/PublicRoute/PublicRoute';\r\nimport PrivateRoute from './components/PrivateRoute/PrivateRoute';\r\n\r\nimport {connect} from 'react-redux';\r\nimport recordOperations from './redux/phonebook/contacts/recordOperations';\r\nimport {authOperations} from './redux/auth'\r\n\r\nimport Layout from './components/shared/Layout'; \r\nimport Loader from './components/shared/Loader';\r\n\r\n\r\n\r\nimport './App.scss';\r\n\r\n\r\nclass App extends Component {   \r\n\r\n  componentDidMount() {\r\n    this.props.getCurrentUser();\r\n  }\r\n\r\n\r\n  render(){\r\n\r\n    const routesMap = routes.map(route => {\r\n      return route.privated ? <PrivateRoute key={route.label} {...route}/> : <PublicRoute key={route.label} {...route} />\r\n      })\r\n\r\n    return (\r\n      <Layout>\r\n        <Suspense fallback={<Loader/>}>\r\n          <Switch>\r\n            {routesMap}\r\n             <Route component={lazy( () => import(\"./pages/NotFound\") )} />\r\n          </Switch>\r\n        </Suspense>\r\n      </Layout>\r\n\r\n      \r\n    );  \r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  getCurrentUser: authOperations.getCurrentUser,\r\n  onGetContacts: recordOperations.getContacts,\r\n}\r\nexport default connect(null, mapDispatchToProps)(App);\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport  {store, persistor}  from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react'\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport './index.css';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </BrowserRouter>\n    ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import axios from 'axios';\r\n\r\nconst url = \"https://goit-phonebook-api.herokuapp.com\"; //\"https://lpj-tasker.herokuapp.com\"\r\n\r\naxios.defaults.baseURL = url;\r\n\r\nclass PhonebookService {\r\n\r\n    //===================  auth ===================\r\n\r\n    register(newUser){\r\n        return axios.post('/users/signup', newUser)\r\n    }\r\n\r\n    login(userCredentials){\r\n        return axios.post('/users/login', userCredentials)\r\n    }\r\n\r\n    logout(token){\r\n        return axios.post('/users/logout', token)\r\n    }    \r\n\r\n    getCurrentUser(){\r\n        return axios.get('/users/current')\r\n    }\r\n\r\n    setToken(token){\r\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n    }\r\n\r\n    unsetToken(){\r\n        axios.defaults.headers.common.Authorization = ``;\r\n    }\r\n\r\n    //================== contacts ==================\r\n    getContacts(){\r\n        return axios.get('/contacts'); \r\n    }\r\n\r\n    addContact(newContact) {\r\n        return axios.post('/contacts', newContact);\r\n    }\r\n\r\n    delContact(id) {\r\n        return axios.delete(`/contacts/${id}`)\r\n    }\r\n    \r\n    updateContact(id) {\r\n        return axios.patch(`/contacts/${id}`)\r\n    }\r\n\r\n}\r\n\r\nexport default new PhonebookService();","\r\n\r\nconst getUserName = (state) => state.auth.user.name;\r\nconst getToken = state => state.auth.token;\r\nconst getError = state => state.auth.error;\r\n\r\nconst selectors = {getUserName, getToken, getError}\r\nexport default selectors;","import authActions from './authActions';\r\nimport api from '../../services/phonebook.service';\r\n\r\nconst register = credentials => dispatch => {\r\n    \r\n    dispatch(authActions.registerRequest());\r\n\r\n    api.register(credentials)\r\n        .then(({data}) => {\r\n            api.setToken(data.token);\r\n            dispatch(authActions.registerSuccess(data));\r\n        })\r\n        .catch( err => dispatch(authActions.registerError(err)));\r\n}\r\n\r\nconst login = credentials => (dispatch) => {\r\n    \r\n    dispatch(authActions.loginRequest());\r\n\r\n    api.login(credentials)\r\n        .then(({data}) => {\r\n            api.setToken(data.token);\r\n            dispatch(authActions.loginSuccess(data));\r\n        })\r\n        .catch( err => dispatch(authActions.loginError(err)));\r\n}\r\n\r\nconst logout = token => dispatch => {\r\n    dispatch(authActions.logoutRequest());\r\n\r\n    api.logout(token)\r\n        .then(({data}) => {\r\n            api.unsetToken();\r\n            dispatch(authActions.logoutSuccess(data));\r\n        })\r\n        .catch( err => dispatch(authActions.logoutError(err)));\r\n}\r\n\r\nconst getCurrentUser = () => (dispatch, getState) => {\r\n\r\n    const { auth: { token } } = getState()\r\n\r\n    if (!token) return\r\n\r\n    api.setToken(token)\r\n\r\n    dispatch(authActions.getCurrentUserRequest());\r\n\r\n    api.getCurrentUser()\r\n        .then(({data}) => {\r\n            dispatch(authActions.getCurrentUserSuccess(data))\r\n        })\r\n        .catch( err => dispatch(authActions.getCurrentUserError(err)));\r\n}\r\n\r\nconst ops = { register, login, logout, getCurrentUser }\r\nexport default ops","import styled from 'styled-components';\r\n\r\nexport const StyledContainer = styled.div`\r\n    width: 1200px;\r\n    padding: 15px 15px;\r\n    margin: 0 auto;\r\n\r\n    @media sreen and (min-width: 450px){\r\n        width: 450px;\r\n    }\r\n\r\n    @media sreen and (min-width: 768px){\r\n        width: 768px;\r\n    }\r\n\r\n    @media sreen and (min-width: 1200px){\r\n        width: 1200px;\r\n    }\r\n`;\r\n","import React from 'react';\r\n\r\nimport { StyledContainer } from './Container.styles';\r\n\r\nconst Container = ({children}) => (\r\n  <StyledContainer>\r\n    {children}\r\n  </StyledContainer>\r\n);\r\n\r\nexport default Container;\r\n","import Container from './Container';\r\n\r\nexport default Container;\r\n","import recordAtions from './recordActions';\r\n\r\nimport api from '../../../services/phonebook.service';\r\n\r\nconst addContact = newContact => dispatch => {\r\n    dispatch(recordAtions.addContactRequest());\r\n\r\n    api.addContact(newContact)\r\n        .then(({data}) => {\r\n            dispatch(recordAtions.addContactSuccess(data))\r\n        })\r\n        .catch( err => dispatch(recordAtions.addContactError(err)));\r\n}\r\n\r\nconst delContact = id => dispatch => {\r\n    dispatch(recordAtions.delContactRequest());\r\n\r\n    api.delContact(id)\r\n        .then(() => {\r\n            dispatch(recordAtions.delContactSuccess(id))\r\n        })\r\n        .catch( err => dispatch(recordAtions.delContactError(err)));\r\n}\r\n\r\nconst getContacts = () => dispatch => {\r\n    dispatch(recordAtions.getContactsRequest());\r\n\r\n    api.getContacts()\r\n        .then(({data}) =>  {\r\n            dispatch(recordAtions.getContactsSuccess(data))\r\n    })\r\n    .catch( err => dispatch(recordAtions.getContactsError(err)));\r\n}\r\n\r\nconst contactsOperations = { addContact, getContacts, delContact }\r\n\r\nexport default contactsOperations;","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/regRequest');\r\nconst registerSuccess = createAction('auth/regSuccess');\r\nconst registerError = createAction('auth/regError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getUserError');\r\n\r\nconst actions = {\r\n    registerRequest,\r\n    registerSuccess,\r\n    registerError,\r\n    loginRequest,\r\n    loginSuccess,\r\n    loginError,\r\n    logoutRequest,\r\n    logoutSuccess,\r\n    logoutError,\r\n    getCurrentUserRequest,\r\n    getCurrentUserSuccess,\r\n    getCurrentUserError\r\n}\r\n\r\nexport default actions","const FILTER_CHANGE  = 'filter/change';\r\n\r\n\r\nconst types = {FILTER_CHANGE, }\r\nexport default types","// import types from './actionTypes';\r\n\r\n// const filterChange = (value='') => ({    //когда с функцией - action creator, просто объект - action\r\n//     type: types.FILTER_CHANGE,\r\n//     payload: {     // как хочу - так и называю, внутри тоже что угодно\r\n//         value\r\n//     }\r\n// })\r\n\r\n// const filterActions = {filterChange, };\r\n// export default filterActions\r\n\r\n\r\n//with tools\r\nimport types from './actionTypes';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nconst filterChange = createAction(types.FILTER_CHANGE);\r\n\r\nconst actions = { filterChange }\r\nexport default actions","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContactRequest= createAction('record/addRequest');\r\nconst addContactSuccess= createAction('record/addSuccess');\r\nconst addContactError= createAction('record/addError');\r\n\r\nconst delContactRequest= createAction('record/delRequest');\r\nconst delContactSuccess= createAction('record/delSuccess');\r\nconst delContactError= createAction('record/delError');\r\n\r\nconst getContactsRequest= createAction('record/getRequest');\r\nconst getContactsSuccess= createAction('record/getSuccess');\r\nconst getContactsError= createAction('record/getError');\r\n\r\nconst actions = { \r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n\r\n    getContactsRequest,\r\n    getContactsSuccess,\r\n    getContactsError,\r\n\r\n    delContactRequest,\r\n    delContactSuccess,\r\n    delContactError,\r\n}\r\nexport default actions"],"sourceRoot":""}